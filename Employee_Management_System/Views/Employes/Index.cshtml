@model IEnumerable<Employee_Management_System.Models.Employe>

@{
    ViewData["Title"] = "Employees List";
}

<div class="container my-5 pb-5 mb-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="fw-bold">Employee Management</h1>
        <div>
            <a asp-action="Create" class="btn btn-success">
                <i class="bi bi-plus-circle me-2"></i> Add New Employee
            </a>
        </div>
    </div>

    <div class="mb-4">
        <input id="searchInput" type="text" class="form-control" placeholder="Search by Full Name, Email, Position, Hire Date, or Department..." />
    </div>

    <div class="table-responsive">
        <table class="table table-hover table-bordered align-middle shadow-sm" id="employeeTable">
            <thead style="background-color: #4fa3d1; color: white;">
                <tr>
                    <th>Full Name</th>
                    <th>Email</th>
                    <th>Base Salary</th>
                    <th>Raised Salary</th>
                    <th>Bonus Type</th>
                    <th>Annual Leave Days</th>
                    <th>Position</th>
                    <th>Hire Date</th>
                    <th>Department</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="employeeTableBody">
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.FullName</td>
                        <td>@item.Email</td>
                        <td>@item.Salary.ToString("N0")</td>
                        <td>
                            @(item.SalaryBonusId == null || item.Salary == item.SalaryRaised ? "–" : item.SalaryRaised.ToString("N0"))
                        </td>
                        <td>
                            @(item.SalaryBonusId == null ? "–" : item.SalaryBonuses.Type)
                        </td>
                        <td class="@(item.AnnualLeaveDays < 0 ? "text-danger fw-bold" : "")">
                            @item.AnnualLeaveDays
                            @if (item.AnnualLeaveDays < 0)
                            {
                                <span class="ms-1">(Over limit!)</span>
                            }
                        </td>
                        <td>@item.PostePosition</td>
                        <td>@item.HireDate.ToString("dd/MM/yyyy")</td>
                        <td>@item.Department?.Nom</td>
                        <td>
                            <div class="btn-group" role="group">
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">
                                    <i class="bi bi-pencil-square"></i>
                                </a>
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info text-white">
                                    <i class="bi bi-eye"></i>
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">
                                    <i class="bi bi-trash"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div id="paginationControls" class="d-flex justify-content-center mt-3">
        <button id="prevBtn" class="btn btn-primary" disabled>&lt; Prev</button>
        <span id="pageNumber" class="mx-2">Page 1</span>
        <button id="nextBtn" class="btn btn-primary">Next &gt;</button>
    </div>

    <div>
        <a asp-controller="Home" asp-action="Dashboard" class="btn btn-outline-secondary me-2 mt-3">
            <i class="bi bi-arrow-left"></i> Back to Dashboard
        </a>
    </div>
</div>

@section Scripts {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">

    <script>
        const rowsPerPage = 10;
        let currentPage = 1;
        const allRows = Array.from(document.querySelectorAll('#employeeTableBody tr'));
        let filteredRows = [...allRows];

        function paginate() {
            const start = (currentPage - 1) * rowsPerPage;
            const end = start + rowsPerPage;
            const visibleRows = filteredRows.slice(start, end);

            allRows.forEach(row => row.style.display = 'none');
            visibleRows.forEach(row => row.style.display = '');

            renderPagination();
        }

        function renderPagination() {
            const pagination = document.getElementById('paginationControls');
            pagination.innerHTML = '';

            const totalPages = Math.ceil(filteredRows.length / rowsPerPage);

            if (totalPages === 0) {
                pagination.innerHTML = '<p>No results found</p>';
                return;
            }

            for (let i = 1; i <= totalPages; i++) {
                const btn = document.createElement('button');
                btn.textContent = i;
                btn.className = `btn btn-sm ${i === currentPage ? 'btn-primary' : 'btn-outline-primary'} mx-1 rounded-pill`;
                btn.addEventListener('click', function () {
                    currentPage = i;
                    paginate();
                });
                pagination.appendChild(btn);
            }
        }

        document.getElementById('searchInput').addEventListener('input', function () {
            const searchValue = this.value.toLowerCase();
            filteredRows = allRows.filter(row => {
                const fullName = row.cells[0].innerText.toLowerCase();
                const email = row.cells[1].innerText.toLowerCase();
                const position = row.cells[6].innerText.toLowerCase();
                const hireDate = row.cells[7].innerText.toLowerCase();
                const department = row.cells[8].innerText.toLowerCase();

                return fullName.includes(searchValue) ||
                    email.includes(searchValue) ||
                    position.includes(searchValue) ||
                    hireDate.includes(searchValue) ||
                    department.includes(searchValue);
            });

            currentPage = 1;
            paginate();
        });

        document.addEventListener('DOMContentLoaded', function () {
            paginate();
        });
    </script>
}
