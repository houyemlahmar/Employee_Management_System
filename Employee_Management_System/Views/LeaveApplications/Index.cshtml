@model IEnumerable<Employee_Management_System.Models.LeaveApplication>

@{
    ViewData["Title"] = "All Leave Applications";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container my-5 pb-5 mb-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="fw-bold text-primary">Leave Management</h1>
    </div>

    <div class="mb-4">
        <input id="searchInput" type="text" class="form-control rounded-pill shadow-sm" placeholder="Search by Full Name, Status, or Priority..." />
    </div>

    <div class="table-responsive">
        <table class="table table-hover table-bordered align-middle shadow-sm" id="leaveTable">
            <thead style="background-color: #0d6efd; color: white;">
                <tr class="text-center">
                    <th>Employee Full Name</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Type</th>
                    <th>Priority</th>
                    <th>Status</th>
                    <th>Leave Days Asked</th>
                    <th>Annual Leave Days</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var leave in Model)
                {
                    var leaveDays = (int)(leave.EndDate - leave.StartDate).TotalDays + 1;
                    var annualDays = leave.Employe?.AnnualLeaveDays ?? 0;
                    bool isOverLimit = leave.Status == LeaveStatus.Pending && leaveDays > annualDays;
                    string leaveClass = isOverLimit ? "text-danger fw-bold" : "";

                    <tr class="text-center">
                        <td>@leave.Employe?.FullName</td>
                        <td>@leave.StartDate.ToShortDateString()</td>
                        <td>@leave.EndDate.ToShortDateString()</td>
                        <td>@leave.Type</td>
                        <td>@leave.Priority</td>
                        <td>
                            <span class="badge
                                @(leave.Status == LeaveStatus.Accepted ? "bg-success" :
                                  leave.Status == LeaveStatus.Refused ? "bg-danger" : "bg-warning text-dark")">
                                @leave.Status
                            </span>
                        </td>
                        <td class="@leaveClass">
                            @leaveDays
                            @if (isOverLimit)
                            {
                                <span class="ms-1 text-danger">(Over limit!)</span>
                            }
                        </td>
                        <td class="@(annualDays < 0 ? "text-danger fw-bold" : "")">
                            @annualDays
                            @if (annualDays < 0)
                            {
                                <span class="ms-1 text-danger">(Over limit!)</span>
                            }
                        </td>
                        <td>
                            <form asp-action="UpdateStatus" method="post" class="d-flex flex-column gap-2">
                                <input type="hidden" name="id" value="@leave.Id" />
                                <select name="newStatus" class="form-select form-select-sm">
                                    <option selected disabled>Change Status</option>
                                    <option value="Accepted">Accepted</option>
                                    <option value="Refused">Refused</option>
                                </select>
                                <button type="submit" class="btn btn-sm btn-outline-primary">Validate</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-center align-items-center mt-4" id="pagination">
        <!-- Pagination buttons will be inserted here -->
    </div>

    <div class="mt-4 text-center">
        <a asp-controller="Home" asp-action="Dashboard" class="btn btn-outline-secondary me-2">
            <i class="bi bi-arrow-left"></i> Back to Dashboard
        </a>
    </div>
</div>

@section Scripts {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">

    <script>
        const rowsPerPage = 10;
        let currentPage = 1;

        const allRows = Array.from(document.querySelectorAll('#leaveTable tbody tr'));
        let filteredRows = [...allRows]; // default = all rows

        function paginate() {
            const start = (currentPage - 1) * rowsPerPage;
            const end = start + rowsPerPage;

            allRows.forEach(row => row.style.display = 'none'); // hide all
            filteredRows.forEach((row, index) => {
                if (index >= start && index < end) {
                    row.style.display = '';
                }
            });

            renderPagination();
        }

        function renderPagination() {
            const pagination = document.getElementById('pagination');
            const totalPages = Math.ceil(filteredRows.length / rowsPerPage);
            pagination.innerHTML = '';

            if (totalPages <= 1) return; // No need pagination if 1 page

            for (let i = 1; i <= totalPages; i++) {
                const btn = document.createElement('button');
                btn.textContent = i;
                btn.className = `btn btn-sm ${i === currentPage ? 'btn-primary' : 'btn-outline-primary'} mx-1 rounded-pill`;
                btn.addEventListener('click', function() {
                    currentPage = i;
                    paginate();
                });
                pagination.appendChild(btn);
            }
        }

        document.getElementById('searchInput').addEventListener('input', function () {
            const searchValue = this.value.trim().toLowerCase();

            filteredRows = allRows.filter(row => {
                const fullName = row.querySelector('td:nth-child(1)')?.textContent.trim().toLowerCase() || '';
                const priority = row.querySelector('td:nth-child(5)')?.textContent.trim().toLowerCase() || '';
                const status = row.querySelector('td:nth-child(6) .badge')?.textContent.trim().toLowerCase() || '';

                return fullName.includes(searchValue) || priority.includes(searchValue) || status.includes(searchValue);
            });

            currentPage = 1;
            paginate();
        });

        document.addEventListener('DOMContentLoaded', function () {
            paginate();
        });
    </script>
}
