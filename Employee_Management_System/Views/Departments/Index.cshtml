@model IEnumerable<Employee_Management_System.Models.Department>

@{
    ViewData["Title"] = "Departments List";
}

<div class="container my-5 pb-5 mb-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="fw-bold text-primary">Department Management</h1>
        <div>
            <a asp-action="Create" class="btn btn-warning">
                <i class="bi bi-plus-circle me-2"></i> Add New Department
            </a>
        </div>
    </div>

    <div class="mb-4">
        <input id="searchInput" type="text" class="form-control rounded-pill shadow-sm" placeholder="Search by Department Name..." />
    </div>

    <div class="table-responsive">
        <table class="table table-hover table-bordered align-middle shadow-sm" id="departmentTable">
            <thead style="background-color: #0d6efd; color: white;">
                <tr>
                    <th>Department Name</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Nom</td>
                        <td>
                            <div class="btn-group" role="group">
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">
                                    <i class="bi bi-pencil-square"></i>
                                </a>
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info text-white">
                                    <i class="bi bi-eye"></i>
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">
                                    <i class="bi bi-trash"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-center align-items-center mt-4" id="pagination">
        <!-- Pagination buttons will be inserted here -->
    </div>

    <div>
        <a asp-controller="Home" asp-action="Dashboard" class="btn btn-outline-secondary me-2">
            <i class="bi bi-arrow-left"></i> Back to Dashboard
        </a>
    </div>
</div>

@section Scripts {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">

    <script>
        const rowsPerPage = 10;
        let currentPage = 1;
        const rows = Array.from(document.querySelectorAll('#departmentTable tbody tr'));
        const totalRows = rows.length;

        // Fonction pour paginer les données
        function paginate() {
            const visibleRows = rows.slice((currentPage - 1) * rowsPerPage, currentPage * rowsPerPage);
            rows.forEach(row => row.style.display = 'none');
            visibleRows.forEach(row => row.style.display = '');

            renderPagination();
        }

        // Fonction pour afficher les boutons de pagination
        function renderPagination() {
            const pagination = document.getElementById('pagination');
            const totalPages = Math.ceil(totalRows / rowsPerPage);
            pagination.innerHTML = '';

            for (let i = 1; i <= totalPages; i++) {
                const btn = document.createElement('button');
                btn.textContent = i;
                btn.className = `btn btn-sm ${i === currentPage ? 'btn-primary' : 'btn-outline-primary'} mx-1 rounded-pill`;
                btn.addEventListener('click', function() {
                    currentPage = i;
                    paginate();
                });
                pagination.appendChild(btn);
            }
        }

        // Fonction de recherche qui filtre les départements par nom
        document.getElementById('searchInput').addEventListener('input', function () {
            const searchValue = this.value.toLowerCase();
            const filteredRows = rows.filter(row => {
                const departmentName = row.cells[0].innerText.toLowerCase();
                return departmentName.includes(searchValue);
            });

            // Affichage des lignes filtrées
            filteredRows.forEach(row => row.style.display = '');
            rows.forEach(row => {
                if (!filteredRows.includes(row)) {
                    row.style.display = 'none';
                }
            });

            // Mise à jour du nombre total de lignes et pagination
            const totalFilteredRows = filteredRows.length;
            if (totalFilteredRows > 0) {
                totalRows = totalFilteredRows;
                paginate();
            } else {
                document.getElementById('pagination').innerHTML = '<p>No results found</p>';
            }
        });

        // Initialisation de la pagination lors du chargement de la page
        document.addEventListener('DOMContentLoaded', function () {
            paginate();
        });
    </script>
}
